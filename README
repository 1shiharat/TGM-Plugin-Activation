=== TGM Plugin Activation ===
Contributors:		Thomas Griffin (@jthomasgriffin / thomasgriffinmedia.com)
			Gary Jones (@GaryJones)
Version: 		2.0.0
Requires at least: 	3.0
Tested up to: 		3.2.1
 
== Description ==

This class will revolutionize how plugins can be handled for WordPress themes. By using classes that are utilized within WordPress, the TGM_Plugin_Activation class can automatically install and activate multiple plugins that are either pre-packaged with a theme or downloaded from the WordPress Plugin Repository.

This class uses the WP_Filesystem Abstraction class to find the best way to install the plugin. WP_Filesystem searches through a number of methods (Direct, FTP, FTP Sockets, SSH) and determines the best one for use based on the user's server setup. If FTP is needed, a form will be displayed to prompt users to input their FTP credentials. To do the installing, this class uses the Plugin_Upgrader and Plugin_Skin_Installer classes to download, install and activate the plugins. This class also uses WP_Error to display any errors to users during the plugin installation and activation process. 

== Installation ==

=== UPDATE ===

As as v2.0.0, the TGM_Plugin_Activation class now has an API for theme developers to hook into the class. Make sure you look at the example.php file and review the installation instructions below.

The example.php file is a model for how you should include the class in your theme. Some important things to note:

1. With the require_once call, make sure to amend the path to the correct location within your theme.
2. For plugins pre-packaged with the theme, the 'source' argument for the plugin array is required and should reflect the directory path to your pre-packaged plugin.
3. The $config variable holds an array of arguments that can be used to customized most everything within the class. 
	- If you define a default absolute path for pre-packaged plugins, you do not need to specify the directory path for your pre-packaged plugin within the 'source' argument. You will only need to specify the zip file.

Other than this, everything should be smooth sailing from here.

== TODO ==

There are lots of things to do with this class (and tons of potential). Here is a short list:

* Consolidate nag messages into one message split into two categories (plugins not installed and plugins installed but not activated)
* Add a bulk installer button at the top of the install plugins page to allow users to install all included/repo plugins at once
* Security and best practices audit

== Changelog ==

= 2.0.0 =

* Re-written structure to include an API for theme developers so no code inside the class needs to be touched
* Introduction of new properties: $default_path and $strings
* Ability to filter all message strings that are outputted by the class
* tgmpa_register() hook for API
* Removed unnecessary is_wp_error() check
* Now uses Settings API to output admin notices
* Internal CSS for optimization
* Three new methods: register, config and actions
* New API function: tgmpa()
* Updated example.php file with example setup for theme authors
* Ability to define custom text domain for localization

= 1.1.0 =

* Added support for multiple plugins of each instance (pre-packaged and repo)
* Removed unnecessary conditional check before class is defined
* Added new property $domain to hold textdomain for localization
* Changed property $args to accept arrays of arguments for each plugin needed
* Added CSS for slight UI enhancements
* Added extra conditional checks current_user_can( 'install_plugins' ) and current_user_can( 'activate_plugins' ) for security
* Changed add_submenu_page to add_theme_page
* Removed menu display if all included plugins were successfully installed and activated
* Changed admin notices to display different messages based on status of plugin (not installed, installed but not activated)
* Each instance of plugin installation/activation now uses plugins_api, Plugin_Upgrader and Plugin_Skin_Installer
* Cleaned up block-level documentation

= 1.0.0 =

* Initial release into the wild