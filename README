=== TGM Plugin Activation ===
Contributors:      Thomas Griffin (@jthomasgriffin / thomasgriffinmedia.com)
                   Gary Jones (Github: @GaryJones / Twitter: GaryJ)
Version:           2.1.0
Requires at least: 3.0.0
Tested up to:      3.3-beta1

== Description ==

This class will revolutionize how plugins can be handled for WordPress themes. By using classes that are
utilized within WordPress, the TGM_Plugin_Activation class can automatically install and activate multiple
plugins that are either packaged with a theme or downloaded from the WordPress Plugin Repository.

This class uses the WP_Filesystem Abstraction class to find the best way to install the plugin. WP_Filesystem
searches through a number of methods (Direct, FTP, FTP Sockets, SSH) and determines the best one for use based
on the user's server setup. If FTP is needed, a form will be displayed to prompt users to input their FTP
credentials. To do the installing, this class uses the Plugin_Upgrader and Plugin_Skin_Installer classes to
download, install and activate the plugins. This class also uses WP_Error to display any errors to users
during the plugin installation and activation process.

== Installation ==

1. Drop the class file somewhere in your theme hierarchy.
2. Add a require_once call within functions.php (or other theme file) referencing the class file.
3. Create a function, hooked to `tgmpa_register`, that registers the plugin and configurations.

For steps 2 and 3, it is recommended your view, copy and paste the contents of example.php
and amend to suit. The example.php file is a model for how you should include the class in your theme.

Some important things to note:

1. With the `require_once` call, make sure to amend the path to the correct location within your theme.
2. For plugins pulled from the .org repo, the source argument is optional. Otherwise it is required and should point
   to the absolute path for the plugin zips within your theme, or to a URL for zips elsewhere online.
3. The $config variable holds an array of arguments that can be used to customize aspects of the class.
   If you define an absolute default path for packaged plugins, you do not need to specify the directory path
   for your pre-packaged plugin within the 'source' argument. You will only need to specify the zip file name.

== TODO ==

Here is a short list of desired improvements:

* Add a bulk installer button to allow users to install all included/repo plugins at once
* Add a way for users to access the plugin info via thickbox
* Dismiss nag with Ajax

See https://github.com/thomasgriffin/TGM-Plugin-Activation/issues for current issues and for reporting bugs and enhancements.

== Changelog ==

= 2.1.0 =

* Plugins are now activated automatically (users no longer need to click the "Activate this plugin" link)
* Nag messages have now been consolidated into one message instead of a message for each plugin
* The nag message can be dismissed by users
* The action links within the nag messages can be filtered by using the tgmpa_notice_action_links filter hook.
* Cleanup of plugin messages and links on the page after a user clicks the Install Plugin button
* Updated string labels for semantics
* Two new methods: dismiss() and populate_file_path()

= 2.0.0 =

* Re-written structure to include an API for theme developers so no code inside the class needs to be touched
* Introduction of new properties: $default_path and $strings
* Ability to filter all message strings that are outputted by the class
* Removed unnecessary is_wp_error() check
* Now uses Settings API to output admin notices
* Internal style sheet for optimization
* Three new methods: register, config and actions
* Renamed API function: tgmpa()
* Updated example.php file with example setup for theme authors
* Ability to define custom text domain for localization

= 1.1.0 =

* Added support for multiple plugins of each instance (pre-packaged and repo)
* Removed unnecessary conditional check before class is defined
* Added new property $domain to hold textdomain for internationalization
* Changed property $args to accept arrays of arguments for each plugin needed
* Added CSS for slight UI enhancements
* Added extra conditional checks current_user_can( 'install_plugins' ) and current_user_can( 'activate_plugins' ) for security
* Changed add_submenu_page to add_theme_page
* Removed menu display if all included plugins were successfully installed and activated
* Changed admin notices to display different messages based on status of plugin (not installed, installed but not activated)
* Each instance of plugin installation/activation now uses plugins_api, Plugin_Upgrader and Plugin_Skin_Installer
* Cleaned up block-level documentation

= 1.0.0 =

* Initial release into the wild